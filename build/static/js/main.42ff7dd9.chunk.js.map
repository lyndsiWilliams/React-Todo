{"version":3,"sources":["components/TodoComponents/TodoForm.js","components/TodoComponents/Todo.js","components/TodoComponents/TodoList.js","App.js","index.js"],"names":["TodoForm","handleChanges","e","setState","newItem","target","value","handleSubmit","preventDefault","console","log","state","props","addItem","completed","onSubmit","this","InputGroup","Input","type","name","onChange","InputGroupAddon","addonType","Button","body","inverse","style","backgroundColor","React","Component","Todo","ListGroup","flush","id","item","className","onClick","handleComplete","textDecoration","ListGroupItem","disabled","tag","borderRadius","task","TodoList","listItems","map","key","listItems1","App","newItemText","Date","now","Number","clearCompleted","filter","Jumbotron","render","document","getElementById"],"mappings":"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","file":"static/js/main.42ff7dd9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Input,\r\n    Button\r\n   } from 'reactstrap';\r\n\r\nclass TodoForm extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            newItem: \"\",\r\n            completed: false\r\n        };\r\n    }\r\n\r\n    handleChanges = e => {\r\n        this.setState({ newItem: e.target.value });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(\"This is the handleSubmit\");\r\n        if(this.state.newItem) {\r\n            this.props.addItem(this.state.newItem);\r\n            this.setState({\r\n                newItem: \"\"\r\n            });\r\n        }\r\n    };  \r\n\r\n\r\n    render() {\r\n        console.log(\"Rendering form\");\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <InputGroup>\r\n                    <Input\r\n                        type=\"text\"\r\n                        name=\"item\"\r\n                        value={this.state.newItem}\r\n                        onChange={this.handleChanges}\r\n                    />\r\n                    <InputGroupAddon addonType=\"append\"><Button body inverse style={{ backgroundColor: '#FFB8E3' }}>Add Task</Button></InputGroupAddon>\r\n                </InputGroup>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\n\r\nconst Todo = props => {\r\n    return (\r\n        // <div\r\n        //  id={props.item.id}\r\n        //  className={`todo${props.item.completed ? '-completed' : ''}`}\r\n        //  onClick={props.handleComplete}\r\n        //  style={{ textDecoration: props.item.completed ? 'line-through' : 'none' }}\r\n        // >\r\n        //     {props.item.task}\r\n        // </div>\r\n\r\n        \r\n        <ListGroup\r\n            flush\r\n            id={props.item.id}\r\n            className={`todo${props.item.completed ? '-completed' : ''}`}\r\n            onClick={props.handleComplete}\r\n            style={{ textDecoration: props.item.completed ? 'line-through' : 'none' }}\r\n        >\r\n            <ListGroupItem disabled tag=\"a\" body inverse style={{ backgroundColor: '#FFE4F3', borderRadius: '25px' }}>{props.item.task}</ListGroupItem>\r\n        </ListGroup>\r\n    );\r\n}\r\n\r\nexport default Todo;","// your components will all go in this `component` directory.\r\n// feel free to change this component.js into TodoList.js\r\nimport React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = props => {\r\n  console.log(props);\r\n    return (\r\n        <div className=\"todo-list\">\r\n          {props.listItems.map(item => (\r\n            <Todo key={item.id} item={item} handleComplete={props.handleComplete} />\r\n          ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport { Jumbotron, Button } from 'reactstrap';\r\n\r\n// Components\r\nimport TodoForm from './components/TodoComponents/TodoForm';\r\nimport TodoList from './components/TodoComponents/TodoList';\r\n\r\nconst listItems1 = [\r\n  {\r\n    task: 'Organize Garage',\r\n    id: 1528817077286,\r\n    completed: false\r\n  },\r\n  {\r\n    task: 'Bake Cookies',\r\n    id: 1528817084358,\r\n    completed: false\r\n  }\r\n];\r\n\r\nclass App extends React.Component {\r\n  // you will need a place to store your state in this component.\r\n  // design `App` to be the parent component of your application.\r\n  // this component is going to take care of state, and any change handlers you need to work with your state\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      listItems: listItems1\r\n    };\r\n  }\r\n\r\n  addItem = newItemText => {\r\n    const newItem = {\r\n      task: newItemText,\r\n      id: Date.now(),\r\n      completed: false\r\n    };\r\n    this.setState({\r\n      listItems: [...this.state.listItems, newItem]\r\n    });\r\n  };\r\n    \r\n  handleComplete = e => {\r\n    console.log(\"correct!\");\r\n      this.setState({\r\n        listItems: this.state.listItems.map(item => {\r\n          console.log(e.target);\r\n          if (item.id===Number(e.target.id)) {\r\n            item.completed=!item.completed\r\n          }\r\n          return item;\r\n        })\r\n      });\r\n    };\r\n\r\n  clearCompleted = e => {\r\n    console.log(this.state);\r\n    e.preventDefault();\r\n    this.setState({\r\n      listItems: this.state.listItems.filter(item => item.completed !== true)\r\n    })\r\n  }\r\n  render() {\r\n    console.log(\"rendering...\");\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"todo-form\">\r\n          <Jumbotron body inverse style={{ backgroundColor: '#FFE4F3', borderRadius: '25px 25px 0 0' }}>\r\n            <h1 className=\"display-3\">It's time to be productive!</h1>\r\n            <br/>\r\n            <hr className=\"my-2\" />\r\n            <p className=\"lead\">\r\n              <Button body inverse style={{ backgroundColor: '#FFB8E3' }} className=\"clear-btn\" onClick={this.clearCompleted}>Clear Completed</Button>\r\n            </p>\r\n          </Jumbotron>\r\n          <TodoForm addItem={this.addItem} />\r\n          <br/>\r\n          <TodoList listItems={this.state.listItems} handleComplete={this.handleComplete} />\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\n\r\nrender(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}